Section 1 Control Structures
Data Set Description
The Spotify Playlist dataset contains the playlist about the ORIGINS. The column in this dataset contains the following details.
Track id: The id of the Spotify
Track Name: The name of the song
Album Name: The name of the Album the song belongs to
Artitst Name: The name of the artist involved in this song
Release Date: The release date of this album
Popularity: The popularity of the song mentioned from 1 to 100
Added By: The person name added this song to the list
Added At: The date of added
Genres: The music type
Record Label: The record label of the song
Danceability: The change of being able to dance for this song
Energy: The energy level of this song
Key: The notes, scale or basis of this song
Loudness: The volume level
Mode: It can be mentioned either major or minor key
Speechiness: The words level in this song
Acousticness: The acoustic level of instruments
Instumentalness: The usage of the instruments
Liveness: The amount of level the songs are meant to be live
Valence: The positive level of the song
Tempo: The speed of the song
Time Signature: The amount of beats

Read the Spotify Playlist datasetÂ¶
 In this section, the dataset will be read and processed by the control structures available in the Python. To open and read the dataset, we can use DictReader() method from csv module and it can be processed by using the looping structures

import csv
# open and read the file
spotify_data = open('Spotify-playlist-origins.csv','r')
spotify_rows=csv.DictReader(spotify_data)

Process the data using control structures
Energy level
In the dataset, the average of the energy column of the dataset can be calculated by iterating the data using the looping statement. By using the for loop statement of the Python, we can calculate the sum popularity and using this sum we can calculate the average. The result can be used to identified what is energy of a person while listening the spotify songs

spotify_data = open('Spotify-playlist-origins.csv','r')
spotify_rows=csv.DictReader(spotify_data)
count = 0
sum = 0
for row in spotify_rows:
    sum = sum + float(row['Energy'])
    count = count + 1
    
average_energy = sum/count
print('The average energy is {}'.format(average_energy))

otal time spend
The total time spend to listen all the songs from the playlist can be calculated by using looping statement. The column Duration is used to calculate the time spend.

spotify_data = open('Spotify-playlist-origins.csv','r')
spotify_rows=csv.DictReader(spotify_data)
total_time = 0
for row in spotify_rows:
    total_time = total_time + int(row['Duration (ms)'])

print('The time spend to listen all the songs is {} ms'.format(total_time))

The count of songs released after 2020
The total number of songs released after the year 2020 can be calculated by using the 'Release Date' column. The conditional statement is used to check the relase date, whether it is after the year of 2020 or not. Each rows are iterated and checked with the if statement.

from datetime import date
from datetime import datetime
spotify_data = open('Spotify-playlist-origins.csv','r')
spotify_rows=csv.DictReader(spotify_data)
date_format = '%d-%m-%Y'
req_date = datetime.strptime('01-01-2020', date_format)
count = 0
for row in spotify_rows:
    release_date = datetime.strptime(row['Release Date'], date_format)
    if release_date > req_date: 
        count = count + 1
print('The total number of songs released after the year of 2020 is {}'.format(count))

import pandas as pd
import numpy as np
import math
import seaborn as sns

Read the dataset using pandas
The read_csv() method of pandas can be used to read the large amount of dataset in efficient manner. It will return the data frame object.

# read the dataset
spotify_dataframe = pd.read_csv("Spotify-playlist-origins.csv")


Display the content of csv files
Display all the contents
The content for the selected dataset can be displayed by printing the dataframe

#display all the content
print(spotify_dataframe)

Head and Tail
We can use head() and tail() method of pandas to display first 5 and last 5 records of the dataset.

spotify_dataframe.head()

potify_dataframe.tail()


Describe
This method is used to describe about the dataset like count, standard deviation, mean, qualities, maximum and minimum of the dataset

spotify_dataframe.describe()

